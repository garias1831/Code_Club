Simulator:
    BoxLayout:
        orientation:'horizontal'
        pos: root.pos
        size: root.size
        #Leftmost textinput bar
        BoxLayout:
            orientation:'vertical'
            padding: ('10dp', '0dp', '10dp', '10dp')
            size_hint: (0.3, 1)
            LabelStyle:
                text:'Launch Height (m)'
            TextInputStyle:
                text:'0.0'
                on_text: root.update_height(self.text)
            LabelStyle:
                text:'Launch Angle (Â°)'
            TextInputStyle:
                text: 'text'
            LabelStyle:
                text:'Initial Velocity (m/s)'
            TextInputStyle:
                text: 'f'
            BoxLayout:
                orientation:'horizontal'
                spacing: '10dp'
                padding: ('0dp', '40dp', '0dp', '0dp')
                Button:
                    size_hint: (0.7, 1)
                    text:'Launch'
                   # on_press: root.test(sim_window)
                Button:
                    size_hint: (0.3, 1)
                    text: 'Reset'
        #Window where the simulation will take place
        SimulatorWindow:
            id: sim_window
            #Bind the window's projectile to the same object as the Simulator's projectile
            projectile: root.projectile #TODO -- if i can find a way to do this in python code, perf, but for now, this works
            size_hint: (0.7, 1)
            canvas.before:
                Color:
                    rgba: .21, .21, .21, 1
                Rectangle:
                    pos: self.pos
                    size: self.size
            #The actual projectile that will be 'launched'
            Widget:
                id: 'proj_img'
                pos_hint: {'x':0.05, 'y':0.0} #TODO -- replace these with bindings
                canvas:
                    Color: 
                        rgba: 1, 1, 1, 1
                    Ellipse:
                        pos: self.pos
                        size: (50, 50)
                        source: 'images/proj.png'
            Widget:
                id: 'platform'
                pos_hint: {'x':0.05, 'y':0.0} #TODO -- replace these with bindings
                size_hint: (0.1, root.height)
                canvas:
                    Color:
                        rgba: 1, 1, 1, 1
                    Rectangle:
                        pos: self.pos
                        size: self.size
                        source: 'images/platform.png'




                    


#Styles for customizing look of widgets
<LabelStyle@Label>:
    text_size: self.size
    halign: 'left'
    valign: 'bottom'

<TextInputStyle@TextInput>:
    size: self.size
    multiline: False
    




#This helps me run the actual thingy
#Defining a widget as our base, and putting a boxlayout withini it to scale to the size of the windowD
<Test@Widget>:
    BoxLayout:
        orientation:'vertical'
        pos: root.pos
        size: root.size

        Button:
            text:'ff'
        Button:
            text:'bar'
<TestBtn@Button>:
    text: 'hey man man'


